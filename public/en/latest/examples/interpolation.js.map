{"version":3,"file":"interpolation.js","mappings":"qIAKA,MAAMA,EAAM,oCACNC,EACJ,4LAGIC,EAAkB,IAAI,IAAU,CACpCC,OAAQ,IAAI,IAAI,CACdF,aAAcA,EACdG,IACE,kEAAoEJ,EACtEK,SAAU,IACVC,QAAS,GACTC,YAAa,GACbC,aAAa,MAIXC,EAAe,IAAI,IAAU,CACjCN,OAAQ,IAAI,IAAI,CACdF,aAAcA,EACdG,IACE,kEAAoEJ,EACtEK,SAAU,IACVC,QAAS,GACTC,YAAa,OAIXG,EAAO,IAAI,KAAK,CACpBC,OAAQ,CAAC,MAAO,SAChBC,KAAM,GACNC,WAAY,cAGRC,EAAO,IAAI,IAAI,CACnBC,OAAQ,OACRC,OAAQ,CAACd,GACTQ,KAAMA,IAGFO,EAAO,IAAI,IAAI,CACnBF,OAAQ,OACRC,OAAQ,CAACP,GACTC,KAAMA,IAGR,SAASQ,EAAUC,GACjB,MAAkE,IAAvC,IAAVA,EAAK,GAAW,IAAgB,IAAVA,EAAK,GAAWA,EAAK,IAApD,GACV,CAEA,MAAMC,EAAQC,SAASC,eAAe,SAChCC,EAAQF,SAASC,eAAe,SAChCE,EAAiB,SAAUC,GAC/B,GAAIA,EAAIC,SACN,OAEF,MAAMC,EAAuBzB,EAAgB0B,QAAQH,EAAII,OACzDT,EAAMU,UAAYH,EACdT,EAAUS,GAAsBI,QAAQ,GACxC,IAEJ,MAAMC,EAAoBvB,EAAamB,QAAQH,EAAII,OACnDN,EAAMO,UAAYE,EACdd,EAAUc,GAAmBD,QAAQ,GACrC,GACN,EAEAjB,EAAKmB,GAAG,cAAeT,GACvBP,EAAKgB,GAAG,cAAeT,E","sources":["webpack:///./interpolation.js"],"sourcesContent":["import Map from '../src/ol/Map.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport View from '../src/ol/View.js';\nimport XYZ from '../src/ol/source/XYZ.js';\n\nconst key = 'get_your_own_D6rA4zTHduk6KOKTXzGB';\nconst attributions =\n  '<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>';\n\nconst notInterpolated = new TileLayer({\n  source: new XYZ({\n    attributions: attributions,\n    url:\n      'https://api.maptiler.com/tiles/terrain-rgb/{z}/{x}/{y}.png?key=' + key,\n    tileSize: 512,\n    maxZoom: 12,\n    crossOrigin: '',\n    interpolate: false,\n  }),\n});\n\nconst interpolated = new TileLayer({\n  source: new XYZ({\n    attributions: attributions,\n    url:\n      'https://api.maptiler.com/tiles/terrain-rgb/{z}/{x}/{y}.png?key=' + key,\n    tileSize: 512,\n    maxZoom: 12,\n    crossOrigin: '',\n  }),\n});\n\nconst view = new View({\n  center: [6.893, 45.8295],\n  zoom: 16,\n  projection: 'EPSG:4326',\n});\n\nconst map1 = new Map({\n  target: 'map1',\n  layers: [notInterpolated],\n  view: view,\n});\n\nconst map2 = new Map({\n  target: 'map2',\n  layers: [interpolated],\n  view: view,\n});\n\nfunction getHeight(rgba) {\n  return -10000 + (rgba[0] * 256 * 256 + rgba[1] * 256 + rgba[2]) * 0.1;\n}\n\nconst info1 = document.getElementById('info1');\nconst info2 = document.getElementById('info2');\nconst showElevations = function (evt) {\n  if (evt.dragging) {\n    return;\n  }\n  const notInterpolatedPixel = notInterpolated.getData(evt.pixel);\n  info1.innerText = notInterpolatedPixel\n    ? getHeight(notInterpolatedPixel).toFixed(1)\n    : '-';\n\n  const interpolatedPixel = interpolated.getData(evt.pixel);\n  info2.innerText = interpolatedPixel\n    ? getHeight(interpolatedPixel).toFixed(1)\n    : '-';\n};\n\nmap1.on('pointermove', showElevations);\nmap2.on('pointermove', showElevations);\n"],"names":["key","attributions","notInterpolated","source","url","tileSize","maxZoom","crossOrigin","interpolate","interpolated","view","center","zoom","projection","map1","target","layers","map2","getHeight","rgba","info1","document","getElementById","info2","showElevations","evt","dragging","notInterpolatedPixel","getData","pixel","innerText","toFixed","interpolatedPixel","on"],"sourceRoot":""}