"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8262],{4257:function(e,t,o){var n=o(4805),r=o(1055),i=o(1733),l=o(4711),y=o(824),a=o(4688),c=o(2776),s=o(677),u=o(5002),w=o(6692),g=o(3279),Z=o(3778);const P=function(){const e={},t=new a.Z({radius:5,fill:null,stroke:new c.Z({color:"orange",width:2})});return e.Point=new s.ZP({image:t}),e.Polygon=new s.ZP({stroke:new c.Z({color:"blue",width:3}),fill:new u.Z({color:"rgba(0, 0, 255, 0.1)"})}),e.MultiLineString=new s.ZP({stroke:new c.Z({color:"green",width:3})}),e.MultiPolygon=new s.ZP({stroke:new c.Z({color:"yellow",width:1}),fill:new u.Z({color:"rgba(255, 255, 0, 0.1)"})}),e.default=new s.ZP({stroke:new c.Z({color:"red",width:3}),fill:new u.Z({color:"rgba(255, 0, 0, 0.1)"}),image:t}),function(t){return e[t.getGeometry().getType()]||e.default}}(),d=new l.Z({features:(new n.Z).readFeatures({type:"FeatureCollection",crs:{type:"name",properties:{name:"EPSG:3857"}},features:[{type:"Feature",geometry:{type:"Point",coordinates:[0,0]}},{type:"Feature",geometry:{type:"MultiPoint",coordinates:[[-2e6,0],[0,-2e6]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[4e6,-2e6],[8e6,2e6],[9e6,2e6]]}},{type:"Feature",geometry:{type:"LineString",coordinates:[[4e6,-2e6],[8e6,2e6],[8e6,3e6]]}},{type:"Feature",geometry:{type:"Polygon",coordinates:[[[-5e6,-1e6],[-4e6,1e6],[-3e6,-1e6],[-5e6,-1e6]],[[-45e5,-5e5],[-35e5,-5e5],[-4e6,5e5],[-45e5,-5e5]]]}},{type:"Feature",geometry:{type:"MultiLineString",coordinates:[[[-1e6,-75e4],[-1e6,75e4]],[[-1e6,-75e4],[-1e6,75e4],[-5e5,0],[-1e6,-75e4]],[[1e6,-75e4],[15e5,0],[15e5,0],[1e6,75e4]],[[-75e4,-1e6],[75e4,-1e6]],[[-75e4,1e6],[75e4,1e6]]]}},{type:"Feature",geometry:{type:"MultiPolygon",coordinates:[[[[-5e6,6e6],[-5e6,8e6],[-3e6,8e6],[-3e6,6e6],[-5e6,6e6]]],[[[-3e6,6e6],[-2e6,8e6],[0,8e6],[0,6e6],[-3e6,6e6]]],[[[1e6,6e6],[1e6,8e6],[3e6,8e6],[3e6,6e6],[1e6,6e6]]]]}},{type:"Feature",geometry:{type:"GeometryCollection",geometries:[{type:"LineString",coordinates:[[-5e6,-5e6],[0,-5e6]]},{type:"Point",coordinates:[4e6,-5e6]},{type:"Polygon",coordinates:[[[1e6,-5e6],[2e6,-35e5],[3e6,-5e6],[1e6,-5e6]]]},{type:"Polygon",coordinates:[[[1e6,-5e6],[2e6,-65e5],[3e6,-5e6],[1e6,-5e6]]]}]}}]})}),p=new i.Z({source:d,style:P}),m=function(){const e={};return e.Polygon=[new s.ZP({fill:new u.Z({color:[255,255,255,.5]})}),new s.ZP({stroke:new c.Z({color:[255,255,255,1],width:5})}),new s.ZP({stroke:new c.Z({color:[0,153,255,1],width:3})})],e.MultiPolygon=e.Polygon,e.LineString=[new s.ZP({stroke:new c.Z({color:[255,255,255,1],width:5})}),new s.ZP({stroke:new c.Z({color:[0,153,255,1],width:3})})],e.MultiLineString=e.LineString,e.Point=[new s.ZP({image:new a.Z({radius:7,fill:new u.Z({color:[0,153,255,1]}),stroke:new c.Z({color:[255,255,255,.75],width:1.5})}),zIndex:1e5})],e.MultiPoint=e.Point,e.GeometryCollection=e.Polygon.concat(e.Point),function(t){return e[t.getGeometry().getType()]}}(),f=new w.Z({style:m}),k=new g.Z({features:f.getFeatures(),style:m,insertVertexCondition:function(){return!f.getFeatures().getArray().every((function(e){return/Polygon/.test(e.getGeometry().getType())}))}});new r.Z({interactions:(0,Z.c)().extend([f,k]),layers:[p],target:"map",view:new y.ZP({center:[0,1e6],zoom:2,multiWorld:!0})})}},function(e){var t;t=4257,e(e.s=t)}]);
//# sourceMappingURL=modify-test.js.map