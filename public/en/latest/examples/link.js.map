{"version":3,"file":"link.js","mappings":"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","sources":["webpack:///../src/ol/interaction/Link.js","webpack:///./link.js"],"sourcesContent":["/**\n * @module ol/interaction/Link\n */\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport MapEventType from '../MapEventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {toFixed} from '../math.js';\n\n/**\n * @param {number} number A number.\n * @return {number} A number with at most 5 decimal places.\n */\nfunction to5(number) {\n  return toFixed(number, 5);\n}\n\n/**\n * @param {string} string A string.\n * @return {number} A number representing the string.\n */\nfunction readNumber(string) {\n  return parseFloat(string);\n}\n\n/**\n * @param {number} number A number.\n * @return {string} A string representing the number.\n */\nfunction writeNumber(number) {\n  return to5(number).toString();\n}\n\n/**\n * @param {number} a A number.\n * @param {number} b A number.\n * @return {boolean} The numbers are different.\n */\nfunction differentNumber(a, b) {\n  if (isNaN(a)) {\n    return false;\n  }\n  return a !== readNumber(writeNumber(b));\n}\n\n/**\n * @param {Array<number>} a An array of two numbers.\n * @param {Array<number>} b An array of two numbers.\n * @return {boolean} The arrays are different.\n */\nfunction differentArray(a, b) {\n  return differentNumber(a[0], b[0]) || differentNumber(a[1], b[1]);\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean|import('../View.js').AnimationOptions} [animate=true] Animate view transitions.\n * @property {boolean} [replace=false] Replace the current URL without creating the new entry in browser history.\n * By default, changes in the map state result in a new entry being added to the browser history.\n * @property {string} [prefix=''] By default, the URL will be updated with search parameters x, y, z, and r.  To\n * avoid collisions with existing search parameters that your application uses, you can supply a custom prefix for\n * the ones used by this interaction (e.g. 'ol:').\n */\n\n/**\n * @classdesc\n * An interaction that synchronizes the map state with the URL.\n *\n * @api\n */\nclass Link extends Interaction {\n  /**\n   * @param {Options} [options] Link options.\n   */\n  constructor(options) {\n    super();\n\n    options = Object.assign(\n      {animate: true, replace: false, prefix: ''},\n      options || {}\n    );\n\n    let animationOptions;\n    if (options.animate === true) {\n      animationOptions = {duration: 250};\n    } else if (!options.animate) {\n      animationOptions = null;\n    } else {\n      animationOptions = options.animate;\n    }\n\n    /**\n     * @type {import('../View.js').AnimationOptions|null}\n     * @private\n     */\n    this.animationOptions_ = animationOptions;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.replace_ = options.replace;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.prefix_ = options.prefix;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.initial_ = true;\n\n    this.updateState_ = this.updateState_.bind(this);\n  }\n\n  /**\n   * @private\n   * @param {string} name A parameter name.\n   * @return {string} A name with the prefix applied.\n   */\n  getParamName_(name) {\n    if (!this.prefix_) {\n      return name;\n    }\n    return this.prefix_ + name;\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @return {string|null} The parameter value.\n   */\n  get_(params, name) {\n    return params.get(this.getParamName_(name));\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @param {string} value The param value.\n   */\n  set_(params, name, value) {\n    params.set(this.getParamName_(name), value);\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   */\n  delete_(params, name) {\n    params.delete(this.getParamName_(name));\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      this.unregisterListeners_(oldMap);\n    }\n    if (map) {\n      this.initial_ = true;\n      this.updateState_();\n      this.registerListeners_(map);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  registerListeners_(map) {\n    this.listenerKeys_.push(\n      listen(map, MapEventType.MOVEEND, this.updateUrl_, this),\n      listen(map.getLayerGroup(), EventType.CHANGE, this.updateUrl_, this),\n      listen(map, 'change:layergroup', this.handleChangeLayerGroup_, this)\n    );\n\n    if (!this.replace_) {\n      addEventListener('popstate', this.updateState_);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  unregisterListeners_(map) {\n    for (let i = 0, ii = this.listenerKeys_.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys_[i]);\n    }\n    this.listenerKeys_.length = 0;\n\n    if (!this.replace_) {\n      removeEventListener('popstate', this.updateState_);\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    this.delete_(params, 'x');\n    this.delete_(params, 'y');\n    this.delete_(params, 'z');\n    this.delete_(params, 'r');\n    this.delete_(params, 'l');\n    window.history.replaceState(null, '', url);\n  }\n\n  /**\n   * @private\n   */\n  handleChangeLayerGroup_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    this.unregisterListeners_(map);\n    this.registerListeners_(map);\n    this.initial_ = true;\n    this.updateUrl_();\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n\n    let updateView = false;\n\n    /**\n     * @type {import('../View.js').AnimationOptions}\n     */\n    const viewProperties = {};\n\n    const zoom = readNumber(this.get_(params, 'z'));\n    if (differentNumber(zoom, view.getZoom())) {\n      updateView = true;\n      viewProperties.zoom = zoom;\n    }\n\n    const rotation = readNumber(this.get_(params, 'r'));\n    if (differentNumber(rotation, view.getRotation())) {\n      updateView = true;\n      viewProperties.rotation = rotation;\n    }\n\n    const center = [\n      readNumber(this.get_(params, 'x')),\n      readNumber(this.get_(params, 'y')),\n    ];\n    if (differentArray(center, view.getCenter())) {\n      updateView = true;\n      viewProperties.center = center;\n    }\n\n    if (updateView) {\n      if (!this.initial_ && this.animationOptions_) {\n        view.animate(Object.assign(viewProperties, this.animationOptions_));\n      } else {\n        if (viewProperties.center) {\n          view.setCenter(viewProperties.center);\n        }\n        if ('zoom' in viewProperties) {\n          view.setZoom(viewProperties.zoom);\n        }\n        if ('rotation' in viewProperties) {\n          view.setRotation(viewProperties.rotation);\n        }\n      }\n    }\n\n    const layers = map.getAllLayers();\n    const layersParam = this.get_(params, 'l');\n    if (layersParam && layersParam.length === layers.length) {\n      for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const value = parseInt(layersParam[i]);\n        if (!isNaN(value)) {\n          const visible = Boolean(value);\n          const layer = layers[i];\n          if (layer.getVisible() !== visible) {\n            layer.setVisible(visible);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateUrl_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n    const initial = this.initial_;\n    this.initial_ = false;\n\n    const center = view.getCenter();\n    const zoom = view.getZoom();\n    const rotation = view.getRotation();\n\n    const layers = map.getAllLayers();\n    const visibilities = new Array(layers.length);\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      visibilities[i] = layers[i].getVisible() ? '1' : '0';\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n\n    this.set_(params, 'x', writeNumber(center[0]));\n    this.set_(params, 'y', writeNumber(center[1]));\n    this.set_(params, 'z', writeNumber(zoom));\n    this.set_(params, 'r', writeNumber(rotation));\n    this.set_(params, 'l', visibilities.join(''));\n\n    if (url.href !== window.location.href) {\n      if (initial || this.replace_) {\n        window.history.replaceState(null, '', url);\n      } else {\n        window.history.pushState(null, '', url);\n      }\n    }\n  }\n}\n\nexport default Link;\n","import Link from '../src/ol/interaction/Link.js';\nimport Map from '../src/ol/Map.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport View from '../src/ol/View.js';\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n    }),\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n\nmap.addInteraction(new Link());\n"],"names":["readNumber","string","parseFloat","writeNumber","number","to5","toString","differentNumber","a","b","isNaN","Link","Interaction","constructor","options","animationOptions","super","Object","assign","animate","replace","prefix","duration","this","animationOptions_","replace_","prefix_","listenerKeys_","initial_","updateState_","bind","getParamName_","name","get_","params","get","set_","value","set","delete_","delete","setMap","map","oldMap","getMap","unregisterListeners_","registerListeners_","push","MapEventType","updateUrl_","getLayerGroup","EventType","handleChangeLayerGroup_","addEventListener","i","ii","length","removeEventListener","url","URL","window","location","href","searchParams","history","replaceState","view","getView","updateView","viewProperties","zoom","getZoom","rotation","getRotation","center","getCenter","setCenter","setZoom","setRotation","layers","getAllLayers","layersParam","parseInt","visible","Boolean","layer","getVisible","setVisible","initial","visibilities","Array","join","pushState","Map","Tile","source","OSM","target","View","addInteraction"],"sourceRoot":""}